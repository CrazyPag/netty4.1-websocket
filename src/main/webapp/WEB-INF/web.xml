<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="WebApp_ID" version="2.5">

	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>chessCard</param-value>
	</context-param>
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:log4j.properties</param-value>
	</context-param>
	<!-- 引入上下文配置文件   -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext.xml</param-value>
	</context-param>
	
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<!-- 启动Servlet载入静态数据   -->
	<servlet>
		<servlet-name>LoadStaticDataServlet</servlet-name>
		<servlet-class>com.whg.web.BootStrapServlet</servlet-class>
		<load-on-startup>0</load-on-startup>
	</servlet>

	<!-- 配置页面跳转，映射所有form结尾的请求 -->
	<servlet>
		<servlet-name>spring-web</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:spring/mvc.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>spring-web</servlet-name>
		<url-pattern>*.qp</url-pattern> 
	</servlet-mapping>

	<!--
		Spring Security 拦截和映射 
		<filter>
			<filter-name>CodeFilter</filter-name>
			<filter-class>com.skylinematrix.admin.web.controller.CodeFilter</filter-class>
		</filter>
		<filter-mapping>
			<filter-name>CodeFilter</filter-name>
			<url-pattern>/login</url-pattern>
		</filter-mapping>
	-->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!--
		<filter> 
			<filter-name>springSecurityFilterChain</filter-name>
			<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		</filter> 
		<filter-mapping>
			<filter-name>springSecurityFilterChain</filter-name>
			<url-pattern>/*</url-pattern> 
		</filter-mapping>
	
		<error-page>
			<error-code>404</error-code>
			<location>/404.html</location>
		</error-page>
		<error-page>
			<error-code>500</error-code>
			<location>/500.html</location>
		</error-page>
	-->

	<session-config>
		<session-timeout>0</session-timeout>
	</session-config>
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>
	
	<!-- 跨域CORS支持 -->
	<filter>
		<filter-name>CorsFilter</filter-name>
		<filter-class>com.whg.web.filter.CorsFilter</filter-class>
	  	<init-param>
	    	<param-name>cors.allowed.origins</param-name>
	    	<param-value>*</param-value>
	  	</init-param>
	  	<init-param>
	    	<param-name>cors.allowed.methods</param-name>
	    	<param-value>GET,POST,HEAD,OPTIONS,PUT</param-value>
	  	</init-param>
	  	<init-param>
	    	<param-name>cors.allowed.headers</param-name>
	    	<param-value>cc-auth-secret,cc-idf-c-key,Content-Type,X-Requested-With,accept,Origin,Access-Control-Request-Method,Access-Control-Request-Headers</param-value>
	  	</init-param>
	  	<init-param>
	    	<param-name>cors.exposed.headers</param-name>
	    	<param-value>Access-Control-Allow-Origin,Access-Control-Allow-Credentials</param-value>
	  	</init-param>
	  	<init-param>
	    	<param-name>cors.support.credentials</param-name>
	    	<param-value>true</param-value>
	  	</init-param>
	  	<init-param>
	    	<param-name>cors.preflight.maxage</param-name>
	    	<param-value>10</param-value>
	  	</init-param>
	</filter>
	<filter-mapping>
	  	<filter-name>CorsFilter</filter-name>
	  	<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 把客户端的content内容对应的请求头部设置为json -->
	<!-- 
	<filter>
		<filter-name>JsonHeaderFilter</filter-name>
		<filter-class>com.whg.web.filter.JsonHeaderFilter</filter-class>
	</filter>
	<filter-mapping>
	  	<filter-name>JsonHeaderFilter</filter-name>
	  	<url-pattern>*.cc</url-pattern>
	</filter-mapping>
	 -->
	
</web-app>
